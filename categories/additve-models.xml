<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Robot Learning by Example (Posts about additve-models)</title><link>https://engyasin.github.io/</link><description></description><atom:link href="https://engyasin.github.io/categories/additve-models.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2024 &lt;a href="mailto:yy33@tu-clausthal.de"&gt;Yasin Yousif&lt;/a&gt; </copyright><lastBuildDate>Sat, 14 Dec 2024 09:15:18 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><link>https://engyasin.github.io/posts/why-the-new-kolmogorov-arnold-networks-so-promising/</link><dc:creator>Yasin Yousif (llama3-comments)</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;em&gt;Recently, (yet) another new neural network structure was proposed. Namely, Kolmogorov-Arnold Network (KAN). Soon this new structure attracted a lot of attention, and for good reason: interpretability. For what current Multi Layers Preceptron (MLPs) networks lack is a way to make sense of the network predictions. Magic isn't involved; we need to know how the learning is done, so we can improve, fix, or extend it in an efficient manner. KANs take a significant step forward in this regard using addition operators, which have been proven to represent higher-order functions effectively.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://engyasin.github.io/posts/why-the-new-kolmogorov-arnold-networks-so-promising/"&gt;Read more…&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>additve-models</category><category>ai</category><category>deep-learning</category><category>interpretability</category><guid>https://engyasin.github.io/posts/why-the-new-kolmogorov-arnold-networks-so-promising/</guid><pubDate>Sun, 19 May 2024 07:25:52 GMT</pubDate></item></channel></rss>